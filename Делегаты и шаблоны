using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp3
    {


interface IIdentity
{
    int Id { get; set; }
}

interface IContact : IIdentity
{
    string Name { get; set; }
    string PhoneNumber { get; set; }
    string Email { get; set; }
}

class Contact : IContact
{
    public int Id { get; set; }
    public string Name { get; set; }
    public string PhoneNumber { get; set; }
    public string Email { get; set; }
}

interface IContactProvider
{
    IEnumerable<IContact> Get();
}

class InMemoryContactProvider : IContactProvider
{
    public IEnumerable<IContact> Get()
    {
        return new List<IContact>();
    }
}

interface IMenageable
{
    void Add(IContact contact);
    void Update(IContact contact);
    void Remove(IContact contact);
}

abstract class BaseContactStore : IMenageable, IEnumerable<IContact>
{
    protected List<IContact> _contacts = new List<IContact>();

    public void Add(IContact contact)
    {
        _contacts.Add(contact);
    }

    public void Update(IContact contact)
    {
        int index = _contacts.FindIndex(c => c.Id == contact.Id);
        if (index != -1)
        {
            _contacts[index] = contact;
        }
    }

    public void Remove(IContact contact)
    {
        _contacts.RemoveAll(c => c.Id == contact.Id);
    }

    public IEnumerator<IContact> GetEnumerator()
    {
        return _contacts.GetEnumerator();
    }

    System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }
}

class ContactStore : BaseContactStore
{

}

class Program
{
    static void Main(string[] args)
    {
  
        ContactStore contactStore = new ContactStore();

     
        contactStore.Add(new Contact { Id = 1, Name = "John", PhoneNumber = "123-456-7890", Email = "john@example.com" });
        contactStore.Add(new Contact { Id = 2, Name = "Jane", PhoneNumber = "456-789-0123", Email = "jane@example.com" });

       
        Contact contactToUpdate = new Contact { Id = 1, Name = "John Doe", PhoneNumber = "555-555-5555", Email = "johndoe@example.com" };
        contactStore.Update(contactToUpdate);

    
        Contact contactToRemove = new Contact { Id = 2 };
        contactStore.Remove(contactToRemove);

        foreach (IContact contact in contactStore)
        {
            Console.WriteLine("Name: {0}, Phone: {1}, Email: {2}", contact.Name, contact.PhoneNumber, contact.Email);
        }
    }
}
}
